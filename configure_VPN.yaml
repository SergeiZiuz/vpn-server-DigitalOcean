- name: Configure an OpenVPN Server 
  hosts: VPN_SERVER
  
  vars:
    username: sergei
    # easy-rsa_path: /home/{{ username }}/easy-rsa

  tasks:
  - name: Installing OpenVPN and Easy-RSA
    become: yes
    apt:
      name:
      - easy-rsa
      - openvpn
      state: latest
      update_cache: true

  - name: Create directory Easy-RSA
    file:
      path: "/home/{{ username }}/easy-rsa/"
      state: directory
      mode: '0700'
      owner: "{{ username }}"
      group: "{{ username }}"

  - name: Create symbolic link
    file:
      src: '/usr/share/easy-rsa/{{ item }}'
      dest: '/home/{{ username }}/easy-rsa/{{ item }}'
      state: link
    loop:
    - easyrsa
    - openssl-easyrsa.cnf
    - vars.example
    - x509-types

  - name: Copy easy-rsa
    copy:
      src: '/home/{{ username }}/easy-rsa/vars.example'
      dest: '/home/{{ username }}/easy-rsa/vars'
      owner: "{{ username }}"
      group: "{{ username }}"
      mode: '0644'
      remote_src: yes

  - name: Change vars
    shell: |
      cd "/home/{{ username }}/easy-rsa/"
      sed -i 's/^.*EASYRSA_ALGO.*/set_var EASYRSA_ALGO      "ec"/' vars
      sed -i 's/^.*EASYRSA_DIGEST.*/set_var EASYRSA_DIGEST      "sha512"/' vars
      sed -i 's/^.*EASYRSA_REQ_CN.*/set_var EASYRSA_REQ_CN   "server"/' vars
      exit 0

  - name: initialize the PKI inside the easy-rsa directory
    command: ./easyrsa init-pki
    args:
      chdir: '/home/{{ username }}/easy-rsa/'
      creates: '/home/{{ username }}/easy-rsa/pki'

  - name: generate a private key and Certificate Signing Request (CSR)
    command: ./easyrsa --batch gen-req server nopass
    args:
      chdir: '/home/{{ username }}/easy-rsa/'
      creates: '/home/{{ username }}/easy-rsa/pki/private/ca.key'

  - name: Copy the server key
    become: yes
    copy: 
      src: '/home/{{ username }}/easy-rsa/pki/private/server.key'
      dest: /etc/openvpn/server/
      remote_src: yes

  - name: Copy semple server config
    become: yes
    copy:
      src: server.conf
      dest: /etc/openvpn/server/
      owner: 'root'
      group: 'root'
      mode: '0644'
  
  - name: Allow packet forwarding for IPv4
    become: yes
    command: sed -i 's/^.*net.ipv4.ip_forward=1.*/#net.ipv4.ip_forward=1/' /etc/sysctl.conf

  - name: Run command and parse
    shell: "ip route list default | awk -F ' ' '{ print $5 }'"
    register: dev

  - name: Add firewall configuration
    become: yes
    shell: |
      sed -i '11s/^/# START OPENVPN RULES \
      # NAT table rules \
      \*nat \
      \:POSTROUTING ACCEPT [0\:0] \
      # Allow traffic from OpenVPN client to {{ dev.stdout }} (change to the interface you discovered!) \
      -A POSTROUTING -s 10.8.0.0\/8 -o {{ dev.stdout }} -j MASQUERADE \
      COMMIT \
      # END OPENVPN RULES \n\n/' /etc/ufw/before.rules
      exit 0

  - name: allow forwarded packets by default 
    become: yes
    command: sed -i 's/^DEFAULT_FORWARD_POLICY="DROP"/DEFAULT_FORWARD_POLICY="ACCEPT"/' /etc/default/ufw

  - name: Setting up a Firewall
    become: yes
    ufw:
      rule: allow
      port: '1194'
      proto: udp
      state: enabled

  - name: Start the open vpn server
    become: yes
    systemd:
      name: openvpn
      state: started
      enabled: yes